{"ast":null,"code":"import _objectSpread from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as _getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super8 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _super8.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndex.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n  var _super9 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(ScatterController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options10 = this.options,\n        spanGaps = _this$options10.spanGaps,\n        segment = _this$options10.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"init\",\n    value: function init(chartOptions) {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super10 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super11 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super11.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator10 = _createForOfIteratorHelper(descriptors),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator11 = _createForOfIteratorHelper(plugins),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var plugin = _step11.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator12 = _createForOfIteratorHelper(names),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var prop = _step12.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator13 = _createForOfIteratorHelper(names),\n    _step13;\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var prop = _step13.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options11 = this.options,\n        aspectRatio = _this$options11.aspectRatio,\n        maintainAspectRatio = _this$options11.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator14 = _createForOfIteratorHelper(changes),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _step14$value = _step14.value,\n            method = _step14$value.method,\n            start = _step14$value.start,\n            count = _step14$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _super12.call(this);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n    return _this23;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options12 = this.options,\n        offset = _this$options12.offset,\n        spacing = _this$options12.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var segment = _step15.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n    return _this24;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator16 = _createForOfIteratorHelper(segments),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var segment = _step16.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _super14.call(this);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n    return _this25;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n    return _this26;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options13 = this.options,\n        borderColor = _this$options13.borderColor,\n        backgroundColor = _this$options13.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator17 = _createForOfIteratorHelper(segments),\n    _step17;\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator18 = _createForOfIteratorHelper(targetSegments),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var tgt = _step18.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator19 = _createForOfIteratorHelper(fillSources),\n            _step19;\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var fillSource = _step19.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator20 = _createForOfIteratorHelper(segments),\n    _step20;\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var segment = _step20.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var _step21$value = _step21.value,\n        src = _step21$value.source,\n        tgt = _step21$value.target,\n        start = _step21$value.start,\n        end = _step21$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options14 = this.options,\n        align = _this$options14.align,\n        padding = _this$options14.labels.padding,\n        rtl = _this$options14.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var hitbox = _step22.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _hitbox = _step23.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _super19.call(this, cfg);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator24 = _createForOfIteratorHelper(added),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _step24$value = _step24.value,\n              _index3 = _step24$value.index,\n              label = _step24$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _super20.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _super22.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _super23.call(this, cfg);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options15 = this.options,\n        backgroundColor = _this$options15.backgroundColor,\n        circular = _this$options15.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _super24.call(this, props);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _super25.call(this, props);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","getStyle","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","reset","getBasePixel","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","skipNull","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","useFinalPosition","getProps","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","scope","override","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","Error","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","interaction","__proto__","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","onHover","getElementsAtEventForMode","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","destroy","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/Sam/Desktop/Hello World/snax-boe-texas/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}